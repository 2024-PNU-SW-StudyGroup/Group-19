4-1 복
# mean(): 평균값구하기
df['기준이 되는 열의 키값'].mean()

#median(): 중앙값 구하기
df['기준이 되는 열의 키값'].median()

"""
median() 메서드는 데이터 개수가 홀수일 경우 가운데 값을 반환하며,
데이터 개수가 짝수일 경우 가운데 두 개 값의 평균을 통해 중앙값을 결정함
"""

#drop_duplicates(): 중복된 값을 가진 행 제거
df['기준이 되는 열의 키값'].drop_duplicates()

#min(), max(): 데이터프레임에서 최솟값과 최댓값 구하기
df['기준이 되는 열의 키값'].min()
df['기준이 되는 열의 키값'].max()

#quantile(): 분위수 구하기
df['기준이 되는 열의 키값'].quantile(0.25)	# 하위 25% 출력
df['기준이 되는 열의 키값'].quantile()		# 하위 50% 출력, 기본값 = 0
df['기준이 되는 열의 키값'].quantile(0.75)	# 하위 75% 출력
df['기준이 되는 열의 키값'].quantile([0.25,0.5,0.75])	# 여러 개의 분위수로 구성된 리스트를 전달하면 각 분위수에 해당하는 값을 담은 시리즈 객체 반환

"""
quantile() 메서드는 매개변수 interpolation에서 중간값을 계산하는 보간 방법을 결정
기본값인 interpolation = 'linear'은 비례식을 세워 계산하게 됨
(1.0-0.75):(0.9-0.75) = (5-4):x
"""
df.Series([1,2,3,4,5]).quantile(0.9)	# 반환값: 4.6

'midpoint는 두 수 사이의 중앙값 반환'
df.Series([1,2,3,4,5]).quantile(0.9, interpolation='midpoint')	# 반환값: 4.5

'nearest는 두 수 중 더 가까운 값 반환'
df.Series([1,2,3,4,5]).quantile(0.9, interpolation='nearest')	# 반환값: 5

'lower는 더 작은 값 반환'
df.Series([1,2,3,4,5]).quantile(0.9, interpolation='lower')		# 반환값: 4

'higher는 더 큰 값 반환'
df.Series([1,2,3,4,5]).quantile(0.9, interpolation='higher')	# 반환값: 5

#var(): 분산 구하기
"""
분산은 평균으로부터 데이터가 얼마나 퍼져있는지를 나타내며
데이터가 모여있다면 분산이 작고 넓게 퍼져있다면 분산이 큼
데이터가 평균에서 얼마나 퍼져 있는지를 나타내는 값이기 때문에
결과값만 보고 값이 큰지 작은지 판단하기 어려움
"""

df['기준이 되는 열의 키값'].var()

#std(): 표준 편차 구하기
"""
표준편차는 '평균을 중심으로 데이터가 대략 얼마만큼 떨어져 분포하는지'를 표현하는 값
"""

df['기준이 되는 열의 키값'].std()

#mode(): 최빈값 구하기
df['기준이 되는 열의 키값'].mode()

4-2 
import matplotlib.pyplot as plt #맷플롯립matplotlib 패키지를 이용하여 그래프 그리기

#scatter(): 산점도 그리기
plt.scatter('x축 좌표 배열', 'y축 좌표 배열')
plt.scatter('x축 좌표 배열', 'y축 좌표 배열', alpha=)	# alpha는 0~1 사이의 값으로, 1에 가까울수록 불투명하게 그려짐

#hist(): 히스토그램 그리기
plt.hist('1차원 배열')
plt.show()

plt.hist('1차원 배열', bins=n)	# bins 매개변수는 데이터를 몇 개의 구간으로 나눌 것인지를 설정
plt.show()

plt.hist('1차원 배열')
#특정 구간의 도수가 너무 커서 동일한 스케일로는 다른 구간의 도수가 표시되지 않는다면 구간을 조정해야 함.
plt.yscale('log')			# yscale() 함수는 축을 로그스케일로 변경
plt.show()

# boxplot(): 상자 수염 그림 그리기
plt.boxplot(한 개 이상의 데이터 프레임)
plt.show()

# 기본적으로 IQR의 1.5배가 수염의 길이
# whis 매개변수에서 조정 가능
plt.boxplot(한 개 이상의 데이터 프레임, whis=n)	# IQR의 n배가 수염의 길이가 되도록 설정
